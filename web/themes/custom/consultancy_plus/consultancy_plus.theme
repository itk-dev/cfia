<?php

/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\paragraphs\Entity\Paragraph;
use Drupal\file\Entity\File;
Use \Drupal\Core\Routing;
use \Drupal\views\Views;
use Drupal\node\Entity\Node;
/**
 * Implements hook_theme().
 */
function consultancy_plus_theme(&$existing, $type, $theme, $path) { 
   $hooks = array();
   $hooks['user_login_form'] = array(
    'render element' => 'form',
    'template' => 'user-login-form',
    'preprocess functions' => array(
       'consultancy_plus_preprocess_user_login'
    ),
   );
   $hooks['user_register_form'] = array(
    'render element' => 'form',
    'template' => 'user-register-form',
    'preprocess functions' => array(
       'consultancy_plus_preprocess_user_register'
    ),
   );
   $hooks['user_pass'] = array(
    'render element' => 'form',
    'template' => 'user-pass-form',
    'preprocess functions' => array(
       'consultancy_plus_preprocess_user_pass'
    ),
   );
   return $hooks; 
}
/**
 * Implements hook_preprocess_user_login().
 */
function consultancy_plus_preprocess_user_login(&$variables) {
  $variables['login_banner_title'] = theme_get_setting('login_banner_title');
  $variables['login_title'] = theme_get_setting('login_title');
  $variables['login_description'] = theme_get_setting('login_description');
  $variables['login_name_text'] = theme_get_setting('login_name_text');
  $variables['login_pass_text'] = theme_get_setting('login_pass_text');
  $variables['login_content'] = theme_get_setting('login_content')['value'];
  $variables['login_content_1'] = theme_get_setting('login_content_1')['value'];
  $variables['login_bottom_content'] = theme_get_setting('login_bottom_content')['value'];
  $variables['login_button_url'] = theme_get_setting('login_button_url');
  $variables['login_button_title'] = theme_get_setting('login_button_title');
  $path = '';
  // Login - Banner Image
  $path = "";
  if (theme_get_setting('login_banner_image') != Null) {
  $fid = theme_get_setting('login_banner_image')[0];
  $file =File::load($fid);
  if (!empty($file)) {
    $path = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
  }
  $variables['login_banner_image_url'] = $path;
  }
}
/**
 * Implements hook_preprocess_user_register().
 */
function consultancy_plus_preprocess_user_register(&$variables) {
  $variables['register_banner_title'] = theme_get_setting('register_banner_title');
  $variables['register_title'] = theme_get_setting('register_title');
  $variables['register_description'] = theme_get_setting('register_description');
  $variables['register_contact_text'] = theme_get_setting('register_contact_text');
  $variables['register_name_text'] = theme_get_setting('register_name_text');
  $variables['register_content'] = theme_get_setting('register_content')['value'];
  $variables['register_bottom_content'] = theme_get_setting('register_bottom_content')['value'];
  $variables['register_email_text'] = theme_get_setting('register_email_text');
  $variables['register_button_url'] = theme_get_setting('register_button_url');
  $variables['register_button_title'] = theme_get_setting('register_button_title');
  // Register - Banner Image
  $path = "";
  if (theme_get_setting('register_banner_image') != Null) {
    $fid = theme_get_setting('register_banner_image')[0];
    $file =File::load($fid);
    if (!empty($file)) {
      $path = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
    }
    $variables['register_banner_image_url'] = $path;
  }
}
/**
 * Implements hook_preprocess_user_pass().
 */
function consultancy_plus_preprocess_user_pass(&$variables) {
  $variables['r_pass_banner_title'] = theme_get_setting('r_pass_banner_title');
  $variables['r_pass_title'] = theme_get_setting('r_pass_title');
  $variables['r_pass_description'] = theme_get_setting('r_pass_description');
  $variables['r_pass_contact_text'] = theme_get_setting('r_pass_contact_text');
  $variables['r_pass_bottom_content'] = theme_get_setting('r_pass_bottom_content')['value'];
  $variables['r_pass_email_text'] = theme_get_setting('r_pass_email_text');
  $variables['re_password_button_url'] = theme_get_setting('re_password_button_url');
  $variables['re_password_button_title'] = theme_get_setting('re_password_button_title');
  // Password - Banner Image
  $path = "";
  if (theme_get_setting('r_pass_banner_image') != Null) {
  $fid = theme_get_setting('r_pass_banner_image')[0];
  $file =File::load($fid);
  if (!empty($file)) {
    $path = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
  }
  $variables['r_pass_banner_image_url'] = $path;
  }
}
/**
 * Implements hook_form_alter().
 */
function consultancy_plus_form_alter( &$form, &$form_state, $form_id ) {
  if ($form_id == 'user_login_form') {
    $form['name']['#attributes']['placeholder'][]='User Name *';
    $form['pass']['#attributes']['placeholder'][]='Password *';
    $form['actions']['submit']['#value'] = t('Login');
    $form['actions']['submit']['#attributes']['class'][]='btn btn-primary btn-style-2 btn-style-md';
  }
  if ($form_id == 'user_register_form') {
    $form['account']['mail']['#attributes']['placeholder'][]='Email *';
    $form['account']['name']['#attributes']['placeholder'][]='User Name *';
    $form['actions']['submit']['#value'] = t('Sign Up');
    $form['actions']['submit']['#attributes']['class'][]='btn btn-primary btn-style-2 btn-style-md';
  }
  if ($form_id == 'user_pass') {
    $form['name']['#attributes']['placeholder'][]='User Name or Email address';
    $form['actions']['submit']['#value'] = t('Reset');
    $form['actions']['submit']['#attributes']['class'][]='btn btn-primary btn-style-2 btn-style-md';
  }
}
// Search Result Page
function consultancy_plus_preprocess_item_list__search_results(array &$variables) {
  
  $pager = \Drupal::service('pager.manager')->getPager();
  if (!empty($pager)){
    $count_results = $pager->getTotalItems();
    $variables['total_items_count'] = $count_results;
  }
  else{
    $variables['total_items_count'] = 0;
  }

  $current_path = \Drupal::request()->getpathInfo();
  //echo $current_path;
  if ($current_path == '/search/node') {
    if (\Drupal::request()->query->has('keys')) {
      $keywords = \Drupal::request()->query->get('keys');
      $variables['keyword'] = $keywords;
    }
  }
}
/**
 * Implements preprocess for HTML().
 */
function consultancy_plus_preprocess_html(&$variables) {
  global $base_url;
  $variables['base_url'] = $base_url;
  $variables['sticky'] = theme_get_setting('sticky');
  $variables['primary_color'] = theme_get_setting('primary_color');
  $variables['secondary_color'] = theme_get_setting('secondary_color');
  $variables['show_pannel'] = theme_get_setting('show_pannel');
  $variables['default_color'] = theme_get_setting('default_color');
  $variables['sticky'] = theme_get_setting('sticky');
  $variables['loader'] = theme_get_setting('loader');
  $variables['back_to_top'] = theme_get_setting('back-to-top');
  $variables['styles'] = theme_get_setting('styles');
  $variables['header_variation'] = theme_get_setting('header_variation');
  $variables['color_set'] = ['set_1' => [
    'title' => t('color_set_1'),
    'name' => t('Combo 1'),
    'colors' => [
    'primary_color' => '#2055e4',
    'secondary_color' => '#f37272',
    ],
  ],
  'set_2' => [
    'title' => t('color_set_2'),
    'name' => t('Combo 2'),
    'colors' => [
    'primary_color' => '#1ecbe1',
    'secondary_color' => '#03150e',
    ],
  ],
  'set_3' => [
    'title' => t('color_set_3'),
    'name' => t('Combo 3'),
    'colors' => [
    'primary_color' => '#1ecbe1',
    'secondary_color' => '#e1341e',
    ],
  ],
  'set_4' => [
    'title' => t('color_set_4'),
    'name' => t('Combo 4'),
    'colors' => [
    'primary_color' => '#ef2936',
    'secondary_color' => '#ffbf00',
    ],
  ],
  'set_5' => [
    'title' => t('color_set_5'),
    'name' => t('Combo 5'),
    'colors' => [
    'primary_color' => '#153156',
    'secondary_color' => '#1ac6ff',
    ],
  ],
  'set_6' => [
    'title' => t('color_set_6'),
    'name' => t('Combo 6'),
    'colors' => [
    'primary_color' => '#014b5f',
    'secondary_color' => '#d2a679',
    ],
  ],
  'set_7' => [
    'title' => t('color_set_7'),
    'name' => t('Combo 7'),
    'colors' => [
    'primary_color' => '#711c82',
    'secondary_color' => '#d2a679',
    ],
  ],
  'set_8' => [
    'title' => t('color_set_8'),
    'name' => t('Combo 8'),
    'colors' => [
    'primary_color' => '#111',
    'secondary_color' => '#23a7ad',
    ],
  ],
  'set_9' => [
    'title' => t('color_set_9'),
    'name' => t('Combo 9'),
    'colors' => [
    'primary_color' => '#e6565e',
    'secondary_color' => '#24cd8c',
    ],
  ],
  'set_10' => [
    'title' => t('color_set_10'),
    'name' => t('Combo 10'),
    'colors' => [
    'primary_color' => '#452e65',
    'secondary_color' => '#fc24f7',
    ],
  ],
];
}
/**
 * Implements preprocessor for page.
 */
function consultancy_plus_preprocess_page(&$variables) {
  global $base_url;
  $variables['base_url'] = $base_url;
  // Topbar
  $variables['contact_text'] = theme_get_setting('contact_text');
  $variables['contact_number'] = theme_get_setting('contact_number');
  $variables['email_address'] = theme_get_setting('email_address');
  $variables['button_text'] = theme_get_setting('button_text');
  $variables['button_link'] = theme_get_setting('button_link');
  // Header 
  $variables['header_variation'] = theme_get_setting('header_variation');
  $variables['sticky'] = theme_get_setting('sticky');
  $variables['loader'] = theme_get_setting('loader');
  $variables['styles'] = theme_get_setting('styles');
  // Footer
  if (!empty(theme_get_setting('copyrights')['value'])) {
    $variables['copyrights'] = theme_get_setting('copyrights')['value'];
  }
  // Footer - Background Image
  $path = "";
  if (theme_get_setting('footer_bg_image') != Null) {
  $fid = theme_get_setting('footer_bg_image')[0];
  $file =File::load($fid);
  if (!empty($file)) {
    $path = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
  }
  $variables['footer_bg_image_url'] = $path;
  }
  // Search - Banner Image
  $path = "";
  if (theme_get_setting('search_banner_image') != Null) {
    $fid = theme_get_setting('search_banner_image')[0];
    $file =File::load($fid);
    if (!empty($file)) {
      $path = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
    }
    $variables['search_banner_image_url'] = $path;
  }
  $variables['search_banner_title'] = theme_get_setting('search_banner_title');
}
/**
 *   Implements preprocessor for language block.
 */
function consultancy_plus_preprocess_links__language_block(&$variables) {
  $currentLanguageCode = \Drupal::languageManager()
    ->getCurrentLanguage()
    ->getId();
  // Replace key of active language with 'activeLink'
  foreach ($variables['links'] as $i => $link) {
    /** @var \Drupal\language\Entity\ConfigurableLanguage $linkLanguage */
    $linkLanguage = $link['link']['#options']['language'];
    if ($currentLanguageCode == $linkLanguage->get('id')) {
      $variables['links']['activeLink'] = $link;
      unset($variables['links'][$i]);
    }
  }
}
// Comment Form
function consultancy_plus_form_comment_form_alter(&$form, &$form_state, $form_id) {
  $form['subject']['widget']['#access'] = FALSE;
  $form['actions']['submit']['#value'] = t('Post Comment');
  $form['actions']['submit']['#attributes']['class'][] = 'btn-style-3 btn btn-style-sm';
  $form['actions']['preview']['#access'] = FALSE; 
}
function consultancy_plus_preprocess_comment(&$variables) {
  $comment = $variables['elements']['#comment'];
  $variables['created_time'] = $comment->getCreatedTime();
}
function consultancy_plus_preprocess_node(&$variables) {

  // Blog - Prev Next
  $variables['pager_prev_text'] = theme_get_setting('pager_prev_text');
  $variables['pager_next_text'] = theme_get_setting('pager_next_text');

  // Cases - Prev Next
  $variables['pager_prev_text_2'] = theme_get_setting('pager_prev_text_2');
  $variables['pager_next_text_2'] = theme_get_setting('pager_next_text_2');

  // Portfolio - Prev Next
  $variables['pager_prev_text_3'] = theme_get_setting('pager_prev_text_3');
  $variables['pager_next_text_3'] = theme_get_setting('pager_next_text_3');
  
  // Get statistics count for current node.
  $node = $variables['node'];
  if($node->getType()=='blog'){
  $stats_storage = \Drupal::service('statistics.storage.node');
  $node_view = $stats_storage->fetchView($node->id());
  $variables['total_count'] = $node_view ? $node_view->getTotalCount() : 0;
  }
    // ADDTOANY
    if ($variables['node']->getType() == 'portfolio'){
      $block = \Drupal\block\Entity\Block::load('addtoanybuttons');
      $variables['share'] = \Drupal::entityTypeManager()
        ->getViewBuilder('block')
        ->view($block);
    }
    if ($variables['node']->getType() == 'blog_post'){
      $block = \Drupal\block\Entity\Block::load('addtoanybuttons');
      $variables['blogshare'] = \Drupal::entityTypeManager()
        ->getViewBuilder('block')
        ->view($block);
    }
  
    // PREVOIOS NODE NEXT NODE
  if ($variables['node']->getType() == 'blog_post'){
    $nids = \Drupal::entityQuery('node')->accessCheck(FALSE)
              ->condition('type','blog_post')->condition('status',1)->execute();
    $blog_nodes = [];
    foreach($nids as $n){
      $blog_nodes[] = $n;
    }
  
    $nid = $variables['node']->id();
    $key = array_search($nid, $blog_nodes);
  
    // Next node url
    if($nid == end($blog_nodes)){
      $data_next = Node::load($blog_nodes[0]);
    }else{
      $data_next = Node::load($blog_nodes[$key+1]);
    }
  
    // Prev node url
    if($nid == $blog_nodes[0]){
      $lkey = array_search(end($blog_nodes), $blog_nodes);
      $data_prev = Node::load($blog_nodes[$lkey]);
    }
    else{
      $data_prev = Node::load($blog_nodes[$key-1]);
    }
    $variables['next_url'] = isset($data_next) ? $data_next->toUrl()->setAbsolute()->toString() : '';
    $variables['prev_url'] = isset($data_prev) ? $data_prev->toUrl()->setAbsolute()->toString() : '';
        
    
    $variables['nextNodeTitle']=$data_next->getTitle();
    $variables['prevNodeTitle']=$data_prev->getTitle();
  
    $prevNodeDate = $data_prev->getCreatedTime();
    $nextNodeDate = $data_next->getCreatedTime();
    $variables['nextnodedate'] = \Drupal::service('date.formatter')->format($nextNodeDate, 'dd/mm');
    $variables['prevnodedate'] = \Drupal::service('date.formatter')->format($prevNodeDate, 'dd/mm');
  
    $variables['nextImage'] = $data_next->get('field_image')->entity->uri->value;
    $variables['prevImage'] = $data_prev->get('field_image')->entity->uri->value;
   
    // COMMENT COUNT
    $nid = $variables['node']->nid->value;
    $database = \Drupal::database();
    $num_comment = $database->query('SELECT comment_count FROM {comment_entity_statistics} WHERE entity_id = ' . $nid)->fetchAssoc();
    if ($num_comment != NULL ){
    $variables['comment_count'] = $num_comment['comment_count'];
    }
  }
  // NEXT NODE PREV NODE FOR PORTFOLIO
  if ($variables['node']->getType() == 'portfolio'){
    $nids = \Drupal::entityQuery('node')->accessCheck(FALSE)
              ->condition('type','portfolio')->condition('status',1)->execute();
    $blog_nodes = [];
    foreach($nids as $n){
      $blog_nodes[] = $n;
    }
  
    $nid = $variables['node']->id();
    $key = array_search($nid, $blog_nodes);
  
    // Next node url
    if($nid == end($blog_nodes)){
      $data_next = isset($blog_nodes[0]) ? Node::load($blog_nodes[0]) : null;
    }else{
      $data_next = isset($blog_nodes[$key+1]) ? Node::load($blog_nodes[$key+1]) : null;
    }
  
    // Prev node url
    if($nid == $blog_nodes[0]){
      $lkey = array_search(end($blog_nodes), $blog_nodes);
      $data_prev = Node::load($blog_nodes[$lkey]);
    }
    else{
      $data_prev = isset($blog_nodes[$key-1]) ? Node::load($blog_nodes[$key-1]) : null;
    }

    if(isset($data_next) && isset($data_prev)) {
      $variables['next_portfolio_url'] = $data_next->toUrl()->setAbsolute()->toString();
      $variables['prev_portfolio_url'] = $data_prev->toUrl()->setAbsolute()->toString();


      $variables['nextNodeTitle']=$data_next->getTitle();
      $variables['prevNodeTitle']=$data_prev->getTitle();

      $prevNodeDate = $data_prev->getCreatedTime();
      $nextNodeDate = $data_next->getCreatedTime();
      $variables['nextnodedate'] = \Drupal::service('date.formatter')->format($nextNodeDate, 'dd/mm');
      $variables['prevnodedate'] = \Drupal::service('date.formatter')->format($prevNodeDate, 'dd/mm');

    }


  }
  // NEXT NODE PREV NODE FOR CASES
  if ($variables['node']->getType() == 'case'){
    $nids = \Drupal::entityQuery('node')->accessCheck(FALSE)
              ->condition('type','case')->condition('status',1)->execute();
    $blog_nodes = [];
    foreach($nids as $n){
      $blog_nodes[] = $n;
    }
  
    $nid = $variables['node']->id();
    $key = array_search($nid, $blog_nodes);
  
    // Next node url
    if($nid == end($blog_nodes)){
      $data_next = Node::load($blog_nodes[0]);
    }else{
      $data_next = Node::load($blog_nodes[$key+1]);
    }
  
    // Prev node url
    if($nid == $blog_nodes[0]){
      $lkey = array_search(end($blog_nodes), $blog_nodes);
      $data_prev = Node::load($blog_nodes[$lkey]);
    }
    else{
      $data_prev = Node::load($blog_nodes[$key-1]);
    }
    $variables['next_case_url'] = $data_next->toUrl()->setAbsolute()->toString();
    $variables['prev_case_url'] = $data_prev->toUrl()->setAbsolute()->toString();
        
    
    
  
    $prevNodeDate = $data_prev->getCreatedTime();
    $nextNodeDate = $data_next->getCreatedTime();
    $variables['nextnodedate'] = \Drupal::service('date.formatter')->format($nextNodeDate, 'dd/mm');
    $variables['prevnodedate'] = \Drupal::service('date.formatter')->format($prevNodeDate, 'dd/mm');


  }




}
/* 
  Maintenance and Coming soon page 
*/
function consultancy_plus_preprocess_maintenance_page(&$variables) {
  $variables['maintenance_mode_tagline'] = theme_get_setting('maintenance_mode_tagline');
  $variables['maintenance_mode_title'] = theme_get_setting('maintenance_mode_title');
  $variables['maintenance_mode_description'] = theme_get_setting('maintenance_mode_description'); 
  $variables['bg_image_m'] = theme_get_setting('bg_image_m');
  // Maintenance - Background Image
  if (theme_get_setting('bg_image_m') != Null) {
    $fid = theme_get_setting('bg_image_m')[0];
    $file =File::load($fid);
    if (!empty($file)) {
      $path = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
    }
    $variables['bg_image_m_url'] = $path;
  }
  $variables['comingsoon_tagline'] = theme_get_setting('comingsoon_tagline');
  $variables['comingsoon_title'] = theme_get_setting('comingsoon_title');
  $variables['comingsoon_description'] = theme_get_setting('comingsoon_description'); 
  // Coming Soon - Image
  $path = "";
  if (theme_get_setting('bg_image_c') != Null) {
  $fid = theme_get_setting('bg_image_c')[0];
  $file =File::load($fid);
  if (!empty($file)) {
    $path = \Drupal::service('file_url_generator')->generateAbsoluteString($file->getFileUri());
  }
  $variables['bg_image_c_url'] = $path;
  }
  $variables['mode_type'] = theme_get_setting('mode_type'); 
  $variables['date'] = theme_get_setting('date'); 
  $variables['custom_message'] = theme_get_setting('custom_message');
  $variables['#attached'] = [
      'drupalSettings' => [
          'custom_date' => $variables['custom_date'] = theme_get_setting('date'),
          'custom_message_dateExpired' => $variables['custom_message_dateExpired'] = theme_get_setting('custom_message'),
      ],
  ];
}
/**
 * Implements hook_theme_suggestions_HOOK_alter() for block templates.
 * @param array $suggestions
 * @param array $variables
 */
function consultancy_plus_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  if (isset($variables['elements']['content']['#block_content'])) {
    array_splice($suggestions, 1, 0, 'block__bundle__' . $variables['elements']['content']['#block_content']->bundle());
  }
}



/**
 *   Implements preprocessor for views unformatted.
 */
function consultancy_plus_preprocess_views_view_unformatted(&$variables) {
  $node = \Drupal::routeMatch()->getParameter('node');
  if ($node instanceof \Drupal\node\NodeInterface) {
    // You can get nid and anything else you need from the node object.
    $j;
    foreach($variables['rows'] as $key => $row){
        $j = $key;
        $variables['rows'][$key]['nid'] = $node->id(); 
    }
  }
}